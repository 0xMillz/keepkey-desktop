{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"GenericResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignedTx": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"status": {
						"type": "string"
					},
					"signedTx": {}
				},
				"required": [
					"success",
					"status",
					"signedTx"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Read": {
				"properties": {
					"data": {
						"type": "string"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Error": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"reason": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"reason"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Write": {
				"properties": {
					"output": {
						"type": "string"
					}
				},
				"required": [
					"output"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WriteBody": {
				"properties": {
					"data": {}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Status": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"status": {
						"type": "string"
					},
					"state": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"status",
					"state"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.unknown_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"PairResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"reason": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"reason"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PairBody": {
				"properties": {
					"serviceName": {
						"type": "string"
					},
					"serviceImageUrl": {
						"type": "string"
					}
				},
				"required": [
					"serviceName",
					"serviceImageUrl"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "keepkey-desktop",
		"version": "0.1.32",
		"contact": {
			"name": "Highlander ",
			"email": "bithighlander@gmail.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/verify": {
			"get": {
				"operationId": "VerifyAuth",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GenericResponse"
								}
							}
						}
					},
					"401": {
						"description": "Please provice a valid serviceKey"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/getPublicKeys": {
			"post": {
				"operationId": "GetPublicKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/btcGetAddress": {
			"post": {
				"operationId": "BtcGetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/ethGetAddress": {
			"post": {
				"operationId": "EthGetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/thorchainGetAddress": {
			"post": {
				"operationId": "ThorchainGetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/osmosisGetAddress": {
			"post": {
				"operationId": "OsmosisGetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/binanceGetAddress": {
			"post": {
				"operationId": "BinanceGetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/cosmosGetAddress": {
			"post": {
				"operationId": "CosmosGetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/btcSignTx": {
			"post": {
				"operationId": "BtcSignTx",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/thorchainSignTx": {
			"post": {
				"operationId": "ThorchainSignTx",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/cosmosSignTx": {
			"post": {
				"operationId": "CosmosSignTx",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/osmosisSignTx": {
			"post": {
				"operationId": "OsmosisSignTx",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/ethSignTx": {
			"post": {
				"operationId": "EthSignTx",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/sign": {
			"post": {
				"operationId": "Sign",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SignedTx"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				},
				"tags": [
					"Secured Endpoints"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/exchange/device": {
			"get": {
				"operationId": "ReadDevice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Read"
										},
										{
											"$ref": "#/components/schemas/Error"
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Unable to communicate with device"
					}
				},
				"tags": [
					"Raw KeepKey Device I/0 Endpoints"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "WriteDevice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Write"
										},
										{
											"$ref": "#/components/schemas/Error"
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Unable to communicate with device"
					}
				},
				"tags": [
					"Raw KeepKey Device I/0 Endpoints"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WriteBody"
							}
						}
					}
				}
			}
		},
		"/status": {
			"get": {
				"operationId": "Status",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Status"
								}
							}
						}
					}
				},
				"tags": [
					"Client Endpoints"
				],
				"security": [],
				"parameters": []
			}
		},
		"/device": {
			"get": {
				"operationId": "Device",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Record_string.unknown_"
								}
							}
						}
					}
				},
				"tags": [
					"Client Endpoints"
				],
				"security": [],
				"parameters": []
			}
		},
		"/pair": {
			"post": {
				"operationId": "Pair",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PairResponse"
								}
							}
						}
					},
					"500": {
						"description": ""
					}
				},
				"tags": [
					"Client Endpoints"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PairBody"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:1646/"
		}
	]
}